-- MySQL Script generated by MySQL Workbench
-- mi√© 20 jun 2018 11:20:23 -04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema encode
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema encode
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS encode;
CREATE SCHEMA IF NOT EXISTS `encode` DEFAULT CHARACTER SET utf8 ;
USE `encode` ;

-- -----------------------------------------------------
-- Table `encode`.`organism`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`organism` (
  `id` INT NOT NULL,
  `name` VARCHAR(200) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`assembly`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`assembly` (
  `id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`biosample`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`biosample` (
  `id` INT NOT NULL,
  `name` VARCHAR(200) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`biosample_term_name`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`biosample_term_name` (
  `id` INT NOT NULL,
  `name` VARCHAR(200) NULL,
  `biosample_id` INT NOT NULL,
  PRIMARY KEY (`id`, `biosample_id`),
  INDEX `fk_biosample_term_name_biosample1_idx` (`biosample_id` ASC),
  CONSTRAINT `fk_biosample_term_name_biosample1`
    FOREIGN KEY (`biosample_id`)
    REFERENCES `encode`.`biosample` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`status` (
  `id` INT NOT NULL,
  `name` VARCHAR(200) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`internal_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`internal_status` (
  `id` INT NOT NULL,
  `name` VARCHAR(200) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`project` (
  `id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`experiment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`experiment_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`experiment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`experiment` (
  `id` VARCHAR(200) NOT NULL,
  `biosample_term_name_id` INT NOT NULL,
  `experiment_type_id` INT NOT NULL,
  `organism_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  `internal_status_id` INT NOT NULL,
  `date_created` DATE NULL,
  `date_released` DATE NULL,
  `cell_cicle` VARCHAR(45) NULL,
  `treatments` VARCHAR(200) NULL,
  `genetic_modifications` VARCHAR(200) NULL,
  `red_errors` INT NULL,
  `orange_errors` INT NULL,
  `yellow_errors` INT NULL,
  `replicates` INT NULL,
  `replication_type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `biosample_term_name_id`, `organism_id`, `project_id`, `status_id`, `internal_status_id`),
  INDEX `fk_experiment_biosample_term_name_idx` (`biosample_term_name_id` ASC),
  INDEX `fk_experiment_organism1_idx` (`organism_id` ASC),
  INDEX `fk_experiment_project1_idx` (`project_id` ASC),
  INDEX `fk_experiment_status1_idx` (`status_id` ASC),
  INDEX `fk_experiment_internal_status1_idx` (`internal_status_id` ASC),
  INDEX `fk_experiment_experiment_type1_idx` (`experiment_type_id` ASC),
  CONSTRAINT `fk_experiment_biosample_term_name`
    FOREIGN KEY (`biosample_term_name_id`)
    REFERENCES `encode`.`biosample_term_name` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_organism1`
    FOREIGN KEY (`organism_id`)
    REFERENCES `encode`.`organism` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `encode`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `encode`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_internal_status1`
    FOREIGN KEY (`internal_status_id`)
    REFERENCES `encode`.`internal_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_experiment_type1`
    FOREIGN KEY (`experiment_type_id`)
    REFERENCES `encode`.`experiment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encode`.`experiment_has_assembly`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encode`.`experiment_has_assembly` (
  `experiment_id` VARCHAR(200) NOT NULL,
  `assembly_id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`experiment_id`, `assembly_id`),
  INDEX `fk_experiment_has_assembly_assembly1_idx` (`assembly_id` ASC),
  INDEX `fk_experiment_has_assembly_experiment1_idx` (`experiment_id` ASC),
  CONSTRAINT `fk_experiment_has_assembly_experiment1`
    FOREIGN KEY (`experiment_id`)
    REFERENCES `encode`.`experiment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_has_assembly_assembly1`
    FOREIGN KEY (`assembly_id`)
    REFERENCES `encode`.`assembly` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
